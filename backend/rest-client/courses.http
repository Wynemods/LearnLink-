### Variables
@baseUrl = http://localhost:3000/api
@contentType = application/json

### Step 1: Login to get JWT token (Use this first)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "username": "kimunyijimmy@gmail.com",
  "password": "Password123",
  "rememberMe": false
}

### Step 2: Copy the token from login response and replace YOUR_JWT_TOKEN_HERE below
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjbWNzOXFjamUwMDA2OXo2MDRmcDkwdnQ5IiwidXNlcm5hbWUiOiJraW11bnlpamltbXkiLCJlbWFpbCI6ImtpbXVueWlqaW1teUBnbWFpbC5jb20iLCJyb2xlIjoiSU5TVFJVQ1RPUiIsImlhdCI6MTc1MTg0MzYwMywiZXhwIjoxNzUyNDQ4NDAzfQ._6phZHS_iwVBdmUn-Ol_Yd3vlUkkyxsltw1nuUhQJKQ

### Get all courses
GET {{baseUrl}}/courses
Accept: application/json

### Get courses with pagination
GET {{baseUrl}}/courses?page=1&limit=5
Accept: application/json

### Get courses with search
GET {{baseUrl}}/courses?search=JavaScript
Accept: application/json

### Get courses by category (using real category slugs from seed.ts)
GET {{baseUrl}}/courses?category=development
Accept: application/json

### Get courses by level
GET {{baseUrl}}/courses?level=beginner
Accept: application/json

### Get courses by price range
GET {{baseUrl}}/courses?priceMin=100&priceMax=200
Accept: application/json

### Get course by ID (replace with actual course ID from database)
GET {{baseUrl}}/courses/COURSE_ID_HERE
Accept: application/json

### Get recommended courses
GET {{baseUrl}}/courses/recommended
Accept: application/json

### Get my courses (requires authentication)
GET {{baseUrl}}/courses/my-courses
Accept: application/json
Authorization: Bearer {{token}}

### Create a course (requires authentication as instructor)
POST {{baseUrl}}/courses
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "title": "Advanced React Development - Test Course",
  "description": "Master React with hooks, context, and advanced patterns through hands-on projects",
  "categoryId": "CATEGORY_ID_HERE",
  "price": 199.99,
  "originalPrice": 299.99,
  "discount": 33,
  "duration": "25 hours",
  "level": "intermediate",
  "modules": 8,
  "thumbnail": "https://images.unsplash.com/photo-1633356122544-f134324a6cee?w=400&h=300&fit=crop",
  "heroImage": "https://images.unsplash.com/photo-1633356122544-f134324a6cee?w=800&h=600&fit=crop",
  "features": ["Lifetime access", "Certificate of completion", "30-day money back guarantee", "Mobile access"],
  "learningOutcomes": ["Master React hooks", "Build complex applications", "Understand state management", "Deploy to production"],
  "requirements": ["Basic JavaScript knowledge", "HTML/CSS fundamentals", "Node.js basics"],
  "isPublished": true
}

### Update a course (requires authentication as course owner)
PUT {{baseUrl}}/courses/COURSE_ID_HERE
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "title": "Updated Course Title - Advanced React Mastery",
  "description": "Updated comprehensive course description with new content",
  "price": 149.99,
  "originalPrice": 199.99,
  "discount": 25
}

### Delete a course (requires authentication as course owner)
DELETE {{baseUrl}}/courses/COURSE_ID_HERE
Authorization: Bearer {{token}}

### Enroll in a course (requires authentication as student)
POST {{baseUrl}}/courses/COURSE_ID_HERE/enroll
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

### Get course progress (requires authentication and enrollment)
GET {{baseUrl}}/courses/COURSE_ID_HERE/progress
Authorization: Bearer {{token}}

### Update course progress (requires authentication and enrollment)
PUT {{baseUrl}}/courses/COURSE_ID_HERE/progress
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "currentLesson": 5,
  "progress": 75,
  "completedLessons": ["lesson-1", "lesson-2", "lesson-3", "lesson-4", "lesson-5"]
}

### Get course categories (public endpoint)
GET {{baseUrl}}/courses/categories
Accept: application/json

### Create bulk courses (for testing - requires instructor authentication)
POST {{baseUrl}}/courses/bulk-create
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "courses": [
    {
      "title": "JavaScript Fundamentals for Beginners",
      "description": "Learn JavaScript from scratch with practical examples and projects",
      "categoryId": "DEVELOPMENT_CATEGORY_ID",
      "price": 99.99,
      "originalPrice": 149.99,
      "discount": 33,
      "duration": "15 hours",
      "level": "beginner",
      "modules": 6,
      "features": ["Lifetime access", "Certificate", "Source code"],
      "learningOutcomes": ["Master JS fundamentals", "Build projects", "DOM manipulation"],
      "requirements": ["Basic computer skills", "Text editor"]
    },
    {
      "title": "Python for Data Science Complete Course",
      "description": "Master Python for data analysis, visualization, and machine learning",
      "categoryId": "DATA_SCIENCE_CATEGORY_ID",
      "price": 199.99,
      "originalPrice": 299.99,
      "discount": 33,
      "duration": "30 hours",
      "level": "intermediate",
      "modules": 10,
      "features": ["Jupyter notebooks", "Real datasets", "Career guidance"],
      "learningOutcomes": ["Data analysis with Pandas", "Machine learning", "Data visualization"],
      "requirements": ["Basic Python knowledge", "Math fundamentals"]
    }
  ]
}

### Rate a course (requires authentication and enrollment)
POST {{baseUrl}}/courses/COURSE_ID_HERE/rate
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "rating": 5,
  "comment": "Excellent course! The instructor explains complex concepts very clearly. Highly recommended for anyone wanting to master React development."
}

### Get course reviews (public endpoint)
GET {{baseUrl}}/courses/COURSE_ID_HERE/reviews
Accept: application/json

### Search courses with multiple filters
GET {{baseUrl}}/courses/search?q=React&category=development&level=intermediate&priceMin=50&priceMax=300
Accept: application/json

### Get courses by specific instructor (using real instructor from seed.ts)
GET {{baseUrl}}/courses?instructorId=INSTRUCTOR_ID_HERE
Accept: application/json

### Get featured/trending courses
GET {{baseUrl}}/courses?sortBy=rating&sortOrder=desc&limit=10
Accept: application/json

### Get recently added courses
GET {{baseUrl}}/courses?sortBy=createdAt&sortOrder=desc&limit=5
Accept: application/json

### Test Authentication Endpoints

### Login as Student (from seed.ts)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "username": "jkkimunyi@gmail.com",
  "password": "Password123",
  "rememberMe": false
}

### Login as Instructor (from seed.ts)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "username": "kimunyijimmy@gmail.com",
  "password": "Password123",
  "rememberMe": false
}

### Login as Another Student (from seed.ts)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "username": "jimmykimunyi@gmail.com",
  "password": "Password123",
  "rememberMe": false
}

### Get User Profile (requires authentication)
GET {{baseUrl}}/auth/profile
Authorization: Bearer {{token}}

### Test Course Filtering by Real Categories from Seed

### Get Development Courses
GET {{baseUrl}}/courses?category=development
Accept: application/json

### Get Design Courses
GET {{baseUrl}}/courses?category=design
Accept: application/json

### Get Business Courses
GET {{baseUrl}}/courses?category=business
Accept: application/json

### Get Data Science Courses
GET {{baseUrl}}/courses?category=data-science
Accept: application/json

### Get Marketing Courses
GET {{baseUrl}}/courses?category=marketing
Accept: application/json

### Test Course Levels from Seed

### Get Beginner Courses
GET {{baseUrl}}/courses?level=beginner
Accept: application/json

### Get Intermediate Courses
GET {{baseUrl}}/courses?level=intermediate
Accept: application/json

### Get Advanced Courses
GET {{baseUrl}}/courses?level=advanced
Accept: application/json

### Instructions for Usage:

# 1. First, run the seed command to populate your database:
#    npx prisma db seed

# 2. Start your backend server:
#    npm run start:dev

# 3. Use one of the login endpoints above to get a JWT token

# 4. Copy the token from the login response and replace "YOUR_JWT_TOKEN_HERE" 
#    with the actual token at the top of this file

# 5. Replace placeholders like "COURSE_ID_HERE" and "CATEGORY_ID_HERE" with 
#    actual IDs from your database

# 6. Now you can test all the endpoints!

### Example: How to get actual IDs after seeding

### First, get categories to find category IDs
GET {{baseUrl}}/courses/categories
Accept: application/json

### Then get courses to find course IDs
GET {{baseUrl}}/courses?limit=5
Accept: application/json

### Real user credentials from seed.ts:
# Student: jkkimunyi@gmail.com / Password123
# Instructor: kimunyijimmy@gmail.com / Password123  
# Student: jimmykimunyi@gmail.com / Password123